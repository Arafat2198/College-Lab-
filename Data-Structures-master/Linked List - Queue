#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#define size 5

struct node
{
  int data;
  struct node *next;
};
typedef struct  node *NODE;

NODE get_node()
{
  NODE p;
  p = (NODE)malloc(sizeof(struct node));
  if(p!=NULL) return p;
  else
    {
      printf("\nNo Memory\n");
      return NULL;
    }
}

NODE add(int ele,NODE head,int *len)
{
  NODE p=head,q;
  q=get_node();
  if(head==size)
    {
      printf("\nQueue is Full\n");
      return head;
    }
  q->data=ele;
  q->next=NULL;
  if(head==NULL)
    {
     return q;
    }
  else {
  while(p->next!=NULL)
       {
	 p=p->next;
       }
  p->next=q;
  (++*len);
  printf("\nAdded\n");
  return head;
}
}

NODE delete(NODE head,int *len)
{
  NODE p;
  if(head==NULL)
    {
      printf("\nQueue is Empty\n");
      return head;
    }
  else
    {
      p=head;
      head=head->next;
      free(p);
      printf("\nDeleted\n");
      (--*len);
      return head;
    }
}

void display(NODE head)
{
  NODE p;
  p=head;
  if(head==NULL)
    {
      printf("\nStack Underflow\n");
    }
  while(p!=NULL)
       {
	 printf("%d\n",p->data);
	 p=p->next;
       }
       printf("\n\n");
}

int main() {
	int choice, len = 0, ele;
		NODE head = NULL;
	clrscr();
	do {
		printf("1. Add \n");
		printf("2. Delete \n");
		printf("3. Display \n");
		printf("4. Exit \n");
		printf("Enter Choice \n");
		scanf("%d", &choice);
		printf("\n\n");

		switch (choice) {
		    case 1: printf("Enter Element \n");
			    scanf("%d", &ele);
			    head = add(ele,head,&len);
			    break;

		    case 2: head = delete(head,&len);
			    break;

		    case 3: display(head);
			    break;

		    case 4: exit(0);
			    break;

		    default: printf("Invalid Choice \n");
		}

	} while (choice != 4);

	return 0;
}
